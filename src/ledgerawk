#!/bin/env bash

usage() {
  echo "Usage:"
  echo "  $0 [flags]"
  echo
  echo "Mandatory flags:"
  echo " -i     input file: transactions copied from your bank"
  echo " -r     reader: the type of reader to use; can be 'santander', 'usbank', 'virgin'"
  echo "Optional flags:"
  echo " -n     do not translate the input file - assume input is ledger format already"
  echo " -o     output file: transactions will be appended here"
  echo " -v     be verbose"
  exit 1
}


# Handle args, skip the first one as it's the institution
while getopts "i:r:o:vn" opt; do
  case $opt in
    o)
      OUTPUT_FILE="$OPTARG"
      ;;
    i)
      INPUT_FILE="$OPTARG"
      ;;
    n)
      NO_TRANS="$OPTARG"
      ;;
    r)
      READER="$OPTARG"
      ;;
    v)
      VERBOSE="$OPTARG"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done

[[ ! -v READER ]] && usage
[[ ! -v INPUT_FILE ]] && usage

# Select path
script_path=$(dirname "$0")

# TODO: Check institution supplied is valid
TMP="$(mktemp -d -t)/"
FILENAME=$(basename "$INPUT_FILE")
[[ -v VERBOSE ]] && echo "Intermediate results will be in $TMP" >&2

if [[ ! -v NO_TRANS ]]; then
  "$script_path"/reader_"${READER}" "$INPUT_FILE" > "$TMP${FILENAME}_intermediate.txt" &&
  sort -gr < "$TMP${FILENAME}_intermediate.txt" > "$TMP${FILENAME}_intermediate_sorted.txt" &&
  "$script_path"/ledgerimport "$TMP${FILENAME}_intermediate_sorted.txt" > "$TMP${FILENAME}"
  POSTINGS_INPUT="$TMP${FILENAME}"
else
  POSTINGS_INPUT="$INPUT_FILE"
fi

"$script_path"/postings.sh "$POSTINGS_INPUT" > "${TMP}import_${FILENAME}"

if [[ -v OUTPUT_FILE ]]; then
  cat "${TMP}import_${FILENAME}" >> "$OUTPUT_FILE"
else
  cat "${TMP}import_${FILENAME}"
fi
