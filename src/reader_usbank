#!/bin/awk -f
# TODO: Cope with US Bank transactions for checks - they have an extra field for the check number
BEGIN {
  FS="\t"
}
{
  if (!inTrans) {
    inTrans=1
    gsub("\t", "", $0) # Trim out all surrounding tabs

    # Guard - this may not be sufficient
    if(!match($0,"^ *[0-9][0-9]")) {
      print "Expected a date, got \"" $0 "\""
      exit 1
    }
    FS="[/]"
    $0=$0
    date = $3 "/" $1 "/" $2
    gsub("[ \t]", "", date) # Trim out all the whitespace
    FS="\t"
  } else {
    # We need to watch for the end of desc and start of transactions
    # At the moment we use the num fields to indicate this which might not be robust
    if(NF > 1) {
      # Checks may have an extra field ("check #")
      # Number of fields helps us decide if its a deposit or withdrawal
      if (NF == 8) {
        deposit = $4
        withdrawal = $6
      } else {
        print "Unexpected number of fields (" NF ") at end of transaction on line num " NR ". Aborting."
        exit 1
      }

      # Tidy up fields
      sub("^ ", "", desc)
      gsub(" ", "", deposit) # Trim out all the whitespace
      gsub(" ", "", withdrawal) # Trim out all the whitespace

      # Work out if credit or debit
      if (match(withdrawal, "^\\$")) {
        amount = "-" withdrawal
      } else {
        amount = deposit
      }
      gsub(" ", "", amount) # Trim out all the whitespace
      # TODO: Pick a safer separator for output?
      # TODO: Ensure width of first field is always big enough
      printf("%.4d\t%s\t%s\t%s\n", NR, date, desc, amount);

      # Reset for next transaction
      desc = ""
      descLines = 0
      inTrans = 0
    } else {
      # We just found another line of the description, add it on
      desc = desc " " $0
      descLines++
      if(descLines > 3) {
        print "Suspicous number of lines in description on line num " NR ", suspect we have missed the end of a transaction somehow. Aborting."
        exit 1
      }
    }
  }
}
